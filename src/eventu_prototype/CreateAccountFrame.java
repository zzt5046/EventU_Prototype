/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eventu_prototype;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author jah6080
 */
public class CreateAccountFrame extends javax.swing.JFrame {

    CreateAccount backend;
    /**
     * Creates new form createAccountFrame
     */
    public CreateAccountFrame() {
        initComponents();
        
        //add button action listeners
        
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                
                System.out.println("    --Create account button pressed");
                int accountValue;
                
                //determine int value for account type
                if(accountSelect.getSelectedItem().equals("Individual")){
                    accountValue = 0;
                }
                else{
                    accountValue = 1;
                }
                
                //determine form errors/correctness and create/save new user if valid
                if(!inputEmail.getText().isEmpty() && !inputPassword.getText().isEmpty() && !inputConfirm.getText().isEmpty()){           
                    if(!inputPassword.getText().equals(inputConfirm.getText())){   
                        
                        JOptionPane.showMessageDialog(null, "Your password and confirm fields do not match!");
                    }
                    else{
                        
                        //send info to CreateAccount backend
                        try {
                            backend = new CreateAccount(inputEmail.getText(), inputPassword.getText(), accountValue);
                        } catch (IOException ex) {
                            Logger.getLogger(CreateAccountFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                        LoginScreenFrame login = new LoginScreenFrame();
                        dispose();
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Please fill out all form fields to continue.");
                }
            }
        });
        
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispose();
            }
        });
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleText = new javax.swing.JLabel();
        accountType = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        confirmPassword = new javax.swing.JLabel();
        create = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        accountSelect = new javax.swing.JComboBox<>();
        inputEmail = new javax.swing.JTextField();
        inputConfirm = new javax.swing.JPasswordField();
        inputPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleText.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        titleText.setText("Create Account");

        accountType.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        accountType.setText("Account Type:");

        email.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        email.setText("Email:");

        password.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        password.setText("Password:");

        confirmPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        confirmPassword.setText("Confirm Password:");

        create.setText("Create");

        cancel.setText("Cancel");

        accountSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Individual", "Club" }));
        accountSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(titleText))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(email)
                                    .addComponent(accountType)
                                    .addComponent(password)
                                    .addComponent(confirmPassword)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(create)
                                .addGap(11, 11, 11)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(cancel))
                            .addComponent(accountSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputEmail)
                            .addComponent(inputConfirm)
                            .addComponent(inputPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleText)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountType)
                    .addComponent(accountSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email)
                    .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password)
                    .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPassword)
                    .addComponent(inputConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(create)
                    .addComponent(cancel))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accountSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountSelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accountSelect;
    private javax.swing.JLabel accountType;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel confirmPassword;
    private javax.swing.JButton create;
    private javax.swing.JLabel email;
    private javax.swing.JPasswordField inputConfirm;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JLabel password;
    private javax.swing.JLabel titleText;
    // End of variables declaration//GEN-END:variables
}
